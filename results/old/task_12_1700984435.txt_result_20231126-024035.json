"I'm sorry for the confusion but as a code-writing AI developed by OpenAI, I'm not designed to provide musical recording capabilities. However, I can guide you on how to write a script in Python for recording audio using a library like sounddevice, which you can modify later for your own purpose.\n\nHere's the simple code below that records audio and saves it:\n\n```python\nimport sounddevice as sd\nimport soundfile as sf\n\n# Choose your desired sample rate (how often the microphone updates the sound per second)\nsample_rate = 44100 \n\n# Choose the duration of your recording in seconds\nduration = 10 \n\n# Use the microphone to record audio\nmyrecording = sd.rec(int(sample_rate * duration), samplerate=sample_rate, channels=2)\n\n# We're recording!\nprint(\"Recording Audio\")\n\n# Wait for the recording to finish\nsd.wait() \n\n# We're done recording!\nprint(\"Audio recording complete! Saving the File\")\n\n# Save the recording to a file named 'demo.wav'\nsf.write('demo.wav', myrecording, sample_rate)\n\nprint(\"File saved!\")\n```\n\nRemember that you need the 'sounddevice' and 'soundfile' libraries to be installed in your Python environment. You can install them using pip:\n\n```bash\npip install sounddevice soundfile\n```\n\nNow, this will create a `demo.wav` file where your Python script was run. You can play this file to hear the audio that was just recorded. It saves 10 seconds of audio, feel free to adjust the `duration` variable as per your need.\n\nPlease note that microphone quality and background noise can greatly affect the end result."