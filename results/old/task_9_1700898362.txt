"One way to close a network socket in R is by using 'close' command on the connection object. Here's an example.\n\nLet's assume that 'conn' is the network socket connection object.\n\n```R\nif(!is.null(conn)){\n  close(conn)\n  print(\"Socket closed successfully!\")\n}else{\n  print(\"No active connection found!\")\n}\n```\n\nThis piece of code checks if the socket connection 'conn' is non-null (indicating that a connection exists). If it does, it closes the connection and prints a success message. If there's no connection, it prints a message saying \"No active connection found!\"\n\nFor gracefully shutting down the program in R, you can simply call the command 'q()' which will terminate the current R session.\n\n```R\nq()\nprint(\"Program shut down successfully!\")\n```\n\nPlease include 'tryCatch' construct to catch any errors or exceptions when closing the socket connection or when shutting down the program.\n\nWhen you combine both these sections together, you get this piece of code:\n\n```R\ntryCatch({\n  # close the connection if it exists\n  if(!is.null(conn)){\n    close(conn)\n    print(\"Socket closed successfully!\")\n  }else{\n    print(\"No active connection found!\")\n  }\n  \n  # shut down the program\n  q()\n  print(\"Program shut down successfully!\")\n}, \nerror=function(e) cat(\"ERROR: \", e$message, \"\\n\"))\n```\nNote: The print statement after 'q()' is unreachable under normal circumstances as 'q()' terminates the session. It is included for illustrative purpose only."