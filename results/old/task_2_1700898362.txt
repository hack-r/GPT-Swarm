"In R, we can use the functions `socketConnection`, `readLines` and `close` from the base package to interact with a socket.\n\nHere's a sample script for your request:\n\n```r\n# Open a socket connection\ncon <- socketConnection(host = \"localhost\", port = 5000, open = \"r+\", blocking = FALSE)\n\nwhile(TRUE) {\n\n  if (!is.null(con)) {\n\n    # Check if the connection is open\n    if (isOpen(con, rw = TRUE)) {\n\n      incomingData <- tryCatch({\n        readLines(con, warn = FALSE) # Read the data sent over the socket\n      },\n      error = function(e) { # Error handling\n        message(\"An error has occured: \", e$message)\n        NULL\n      },\n      warning = function(w) { \n         message(\"A warning has occured: \", w$message) \n         NULL\n      })\n\n      if(!is.null(incomingData) & incomingData != \"\") { \n        cat(\"Received data: \", incomingData, \"\\n\")\n      }\n    }\n  }\n\n  Sys.sleep(0.5) # delay of half a second before the loop repeats itself\n}\n\n# Close the connection after usage\nclose(con)\n```\nFor this script:\n\n- The `socketConnection` function is used to open a connection at localhost on port 5000 in a read-write (r+) mode.\n- A while loop is used to constantly check for incoming data.\n- In every loop iteration, it checks if the connection is open with the operator `isOpen`.\n- `readLines` function is used to read data coming in from the socket connection.\n- `tryCatch` is implemented for robust error handling while waiting and reading incoming data.\n- With `Sys.sleep`, we can delay the loop by a certain amount of time to avoid excessive CPU-work.\n\nRemember to replace `\"localhost\"` and `5000` with appropriate host and port for your specific use case. Also, be cautious about using relentless while-loops in your code. You need to make sure that you exit the loop under all conditions to prevent your system from hanging. \n\nPlease note that the server should be running on the specified host and port, otherwise you'll receive a \"cannot open the connection\" error."