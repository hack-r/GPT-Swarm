"While R is a powerful language for statistical computing and graphics, it is not typically used for lower-level network operations like packet management. Those tasks are usually performed using a system level language like C/C++ or a scripting language like Python. \n\nHowever, If you still want to implement this in R, you might want to employ some external libraries such as 'httr' and 'jsonlite' to handle http requests and responses. \n\nUnfortunately, uderstanding and handling dropped packets is a low-level networking problem that would require interacting with the TCP/IP stack directly, so it's beyond the scope of R's capabilities.\n\nInstead, here is an example of sending HTTP requests and handling responses in R using 'httr' library:\n\n```R\nlibrary(httr)\n\n# Send a request\nresponse <- POST(\"http://example.com/api\", body = list(message = \"Hello, server!\"))\n\n# Check if the request was successful\nif(http_error(response)) {\n  # Log the error\n  write(\"A packet was dropped\", stderr())\n  cat(\"Error:\", content(response, \"text\"), \"\\n\", file = stderr())\n\n  # Send a message back to the source\n  response <- POST(\"http://example.com/api\", body = list(message = \"Your packet was dropped\"))\n}\n```\n\nHowever, I highly recommend using a more suitable language for this task if possible. If the language is not a constraint, then Python would be a more fitting choice using network related libraries like \"socket\" and \"scapy\". Please let me know if you would like further assistance."